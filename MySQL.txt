CREATE SCHEMA `shop` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
CREATE TABLE `shop`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `discount` TINYINT(64) NULL,
  PRIMARY KEY (`id`));
ADD COLUMN `alias_name` VARCHAR(128) NULL AFTER `discount`

show datadases; -- список всех БД
show tables; -- список файлов в БВ
show columns from (..); -- список столбцов в (таблице)

use (..); -- перейти в (БД)

insert into (..); <..> values ".."; -- зполнить (таблице) в <столбцы> "данные" 
select * from (..); -- получить данные из (таблицы)
	select * from (..) where <..>; -- получить данные из (таблицы) удовлетворяющие <условию>
	select * from (..) where <..> and <..>; -- получить данные из (таблицы) удовлетворяющие <условиям>
	select * from (..) where (..) or (..); -- получить данные из (таблицы) удовлетворяющие одному из условий
	select * from (..) where is null; -- получить данные из (таблицы) с незаполненным полем
	select * from (..) where is not null; -- получить данные из (таблицы) с заполненным полем
	select * from <..> order by (..); -- вывести все данные <таблицы> и отсортировать по значению (столбца) по возрастанию
	select * from <..> order by (..) desc; -- вывести все данные <таблицы> и отсортировать по значению (столбца) по убыванию
	select * from <..> order by (..) asc; -- вывести все данные <таблицы> и отсортировать по значению (столбца) в прямом порядке
	select * from <..> where (..) ".." order by (..); -- вывести все данные <таблицы> из со "значение" (столбца) и отсортировать по значению (столбца) по возрастанию	
	select * from <..> where (..) ".." order by (..) desc; -- вывести все данные <таблицы> из со "значение" (столбца) и отсортировать по значению (столбца) в обратном порядке
	select * from <..> where (..) ".." order by (..) asc; -- вывести все данные <таблицы> из со "значение" (столбца) и отсортировать по значению (столбца) в прямом порядке
	select * from <..> limit X; -- вывести из <таблицы> первые Х строк
select (..) from <..>; -- получить (столбец) из <таблицы>
select distinct (..) from <..>; -- получить уникальные значения (столбца) из <таблицы>

update <..> set (..) where (..) -- обновить в <таблице> (данные) по (условию)
delete from <..> where (..) -- удалить данные в <таблице> по (условию)

select (*) from (..)
	inner join (..) on <..> = <..>; -- вывести и объединить в (таблице) <строку> и приравнять к <строке> в (таблице)
select (*) from (..)
	left join (..) on <..> = <..>; -- вывести и объединить в (таблице) все <строки> и приравнять к <строке> в (таблице)
select (*) from (..)
	right join (..) on <..> = <..>; -- вывести и объединить в (таблице) <строку> и приравнять ко всем <строкам> в (таблице)
	(*) -- при необходимости заменяем на нужные столбцы

select * from (..) where <..>
union
select * from (..) where <..>; -- получить данные из (таблицы) удовлетворяющие <условию> и склеить результаты запроса

select count(*) from (..); -- вывести количество строк в (таблице)
	select count(*) from (..) where <..>; -- вывести количество строк в (таблице) соответствующих условию
select sum(..) from (..); -- вывести сумму (строк) в (таблице)
select min(..) from (..); -- вывести минимальное значение (строки) в (таблице)
select max(..) from (..); -- вывести максимальное значение (строки) в (таблице)

group by (..); -- сгрупировать значения по (строке)

start transaction;
	(..);
	(..);
commit			-- выполнить все (операции) одновременно